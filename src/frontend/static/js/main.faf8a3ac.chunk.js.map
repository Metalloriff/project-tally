{"version":3,"sources":["Components/SwitchItem.js","Components/InlineLoading.js","Classes/Constants.js","Components/Tooltip.js","App.js","serviceWorker.js","index.js"],"names":["SwitchItem","title","defaultValue","callback","className","type","defaultChecked","onInput","e","currentTarget","checked","InlineLoading","joinClassNames","final","i","arguments","length","Array","isArray","trim","Tooltip","children","direction","color","style","onClick","React","useState","visible","ref","useRef","useEffect","current","parentElement","classList","add","remove","toLowerCase","backgroundColor","electron","window","require","options","includeSubDirs","blackList","languages","Object","keys","fs","path","processDirectory","a","dir","Promise","r","readdir","err","files","child","fp","join","blacklist","some","bl","indexOf","lstatSync","isDirectory","validExtensions","extname","push","App","setStatus","reduce","arr","lang","extensions","extension","split","map","replace","directory","languageData","entries","finalizedData","errors","total","fileCount","lineCount","charCount","file","filename","basename","language","find","localPath","slice","fileData","readFile","data","output","console","error","filePercentage","linePercentage","charPercentage","setTallyData","setProcessingState","log","TallyDataItem","collapsed","setCollapsed","filenames","useMemo","sort","x","y","renderedChildren","renderChildren","target","marginTop","formatNumberValue","toFixed","marginRight","marginBottom","num","Intl","NumberFormat","format","exportData","remote","dialog","showSaveDialog","filters","name","then","filePath","writeFileSync","JSON","stringify","encoding","setDirectoryState","processing","tallyData","statusText","tallyLanguages","filter","showOpenDialog","properties","filePaths","icon","faFolder","width","Fragment","val","spellCheck","onChange","value","languageName","splice","process","bind","href","Date","getFullYear","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.faf8a3ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SwitchItem.scss\";\r\n\r\nexport default function SwitchItem({ title, defaultValue, callback }) {\r\n    return (\r\n        <div className=\"SwitchItem\">\r\n            <div className=\"Title\">{title}</div>\r\n            \r\n            <input className=\"Switch\"\r\n                   type=\"checkbox\"\r\n                   defaultChecked={defaultValue}\r\n                   onInput={e => callback?.(e.currentTarget.checked)}/>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./InlineLoading.scss\";\r\n\r\nexport default function InlineLoading() {\r\n    return (\r\n        <div className=\"InlineLoadingContainer\">\r\n            <div className=\"Dot A\"/>\r\n            <div className=\"Dot B\"/>\r\n            <div className=\"Dot C\"/>\r\n        </div>\r\n    )\r\n}","export function joinClassNames() {\r\n    let final = \"\";\r\n\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        switch (typeof(arguments[i])) {\r\n            case (Array.isArray(arguments[i]) && typeof(arguments[i][0]) === \"boolean\" && \"object\"):\r\n                if (arguments[i][0] === true)\r\n                    final += arguments[i][1];\r\n                else if (arguments[i][2])\r\n                    final += arguments[i][2];\r\n                break;\r\n\r\n            default:\r\n                final += arguments[i];\r\n                break;\r\n        }\r\n\r\n        final += \" \";\r\n    }\r\n\r\n    return final.trim();\r\n}\r\n\r\nexport function getRandomKey() { return Math.random().toString(36).substr(7); }","import React from \"react\";\r\nimport \"./Tooltip.scss\";\r\nimport { joinClassNames } from \"../Classes/Constants\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default function Tooltip({ children, direction = \"up\", className = \"\", color, style, onClick }) {\r\n    const [visible, setVisible] = React.useState(false);\r\n    const ref = React.useRef();\r\n    \r\n    React.useEffect(() => {\r\n        ref.current.parentElement.classList.add(\"HasTooltip\");\r\n        \r\n        return () => {\r\n            ref.current && ref.current.parentElement.classList.remove(\"HasTooltip\");\r\n        };\r\n    }, [ children, direction ]);\r\n    \r\n    return (\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer\", direction.toLowerCase(), [visible, \"Visible\"], className)} style={style} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function DetachedTooltip({ children, direction = \"up\", className = \"\", color, style, onClick, parentRef }) {\r\n    const container = React.useMemo(() => document.getElementsByClassName(\"AppMain\")[0], []);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [styles, setStyles] = React.useState(null);\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        const parent = parentRef.current;\r\n        \r\n        const events = {\r\n            onMouseEnter: () => {\r\n                if (visible) return;\r\n                \r\n                const rect = parent.getBoundingClientRect();\r\n                const tooltipRect = ref.current.getBoundingClientRect();\r\n                \r\n                switch (direction) {\r\n                    case \"up\":\r\n                        setStyles({\r\n                            top: rect.y - rect.height - tooltipRect.height,\r\n                            left: rect.x + (rect.width / 2)\r\n                        });\r\n                        break;\r\n\r\n                    case \"left\":\r\n                        setStyles({\r\n                            top: rect.y - (rect.height / 2) + ((tooltipRect.height * 1.25) / 3),\r\n                            left: rect.x - (tooltipRect.width * 1.25)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"down\":\r\n                        setStyles({\r\n                            bottom: rect.y - (tooltipRect.height * 1.25),\r\n                            left: rect.x - ((tooltipRect.width * 1.25) / 2) + (rect.width / 2)\r\n                        });\r\n                        break;\r\n                        \r\n                    case \"right\":\r\n                        setStyles({\r\n                            top: rect.y - ((tooltipRect.height * 1.25) / 2) + (rect.height / 2),\r\n                            right: rect.x - tooltipRect.width - 5\r\n                        });\r\n                        break;\r\n                }\r\n                \r\n                setVisible(true);\r\n            },\r\n            onMouseLeave: () => setVisible(false)\r\n        };\r\n        \r\n        parent.addEventListener(\"mouseenter\", events.onMouseEnter);\r\n        parent.addEventListener(\"mouseleave\", events.onMouseLeave);\r\n        \r\n        return () => {\r\n            parent.removeEventListener(\"mouseenter\", events.onMouseEnter);\r\n            parent.removeEventListener(\"mouseleave\", events.onMouseLeave);\r\n        };\r\n    }, [ children, direction ]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div ref={ref} className={joinClassNames(\"TooltipContainer Detached\", direction.toLowerCase(), [visible, \"Visible\"], className)}\r\n             style={{ ...(styles ?? {}), ...(style ?? {}) }} onClick={onClick}>\r\n            <div className=\"Tooltip\" style={{ backgroundColor: color }}>{ children }</div>\r\n            <div className=\"TooltipArrow\" style={{ backgroundColor: color }}/>\r\n        </div>,\r\n        container\r\n    );\r\n}","import React from \"react\";\nimport \"./App.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport SwitchItem from \"./Components/SwitchItem\";\nimport languages from \"./Classes/languages.json\";\nimport InlineLoading from \"./Components/InlineLoading\";\nimport Tooltip from \"./Components/Tooltip\";\n\nconst electron = window.require(\"electron\");\n\nfunction selectDirectory() {\n\treturn electron.remote.dialog.showOpenDialog(\n\t\tnull,\n\t\t{ properties: [\"openDirectory\"] }\n\t);\n}\n\nconst options = {\n\tincludeSubDirs: true,\n\tblackList: `/node_modules/\\n/build/`,\n\tlanguages: Object.keys(languages)\n};\n\nconst fs = window.require(\"fs\");\nconst path = window.require(\"path\");\n\nasync function process() {\n\tconst validExtensions = options.languages.reduce((arr, lang) => {\n\t\tfor (const extension of languages[lang].extensions)\n\t\t\tarr.push(extension);\n\t\treturn arr;\n\t}, []);\n\tconst files = [];\n\tconst blacklist = options.blackList.split(\"\\n\").map(bl => bl.replace(/\\//g, \"\\\\\").trim());\n\t\n\tasync function processDirectory(dir) {\n\t\tconst children = await new Promise(r =>\n\t\t\tfs.readdir(dir, (err, files) => r(files)));\n\t\t\n\t\tfor (const child of children) {\n\t\t\tconst fp = path.join(dir, child);\n\t\t\tif (blacklist.some(bl => ~fp.indexOf(bl))) continue;\n\t\t\tconst stats = fs.lstatSync(fp);\n\t\t\t\n\t\t\tif (stats.isDirectory()) {\n\t\t\t\tif (options.includeSubDirs) {\n\t\t\t\t\tawait processDirectory(fp);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (~validExtensions.indexOf(path.extname(child)))\n\t\t\t\tfiles.push(fp);\n\t\t\t\n\t\t\tApp.setStatus(`${files.length} files found so far`);\n\t\t}\n\t}\n\t\n\tawait processDirectory(App.directory);\n\t\n\tconst languageData = Object.entries(languages);\n\tconst finalizedData = {\n\t\terrors: 0,\n\t\ttotal: {\n\t\t\tfileCount: 0,\n\t\t\tlineCount: 0,\n\t\t\tcharCount: 0\n\t\t}\n\t};\n\t\n\tfor (const file of files) {\n\t\ttry {\n\t\t\tconst extension = path.extname(file);\n\t\t\tconst filename = path.basename(file);\n\t\t\tconst language = languageData.find(([, lang]) =>\n\t\t\t\t~lang.extensions.indexOf(extension))[0];\n\t\t\tconst localPath = file.replace(App.directory, \"\").slice(1);\n\n\t\t\tApp.setStatus(`Reading ${filename}...`);\n\n\t\t\tif (!finalizedData[language])\n\t\t\t\tfinalizedData[language] = {\n\t\t\t\t\tfileCount: 0,\n\t\t\t\t\tlineCount: 0,\n\t\t\t\t\tcharCount: 0,\n\t\t\t\t\tfileData: {}\n\t\t\t\t};\n\t\t\t\n\t\t\tconst data = await new Promise(r =>\n\t\t\t\tfs.readFile(file, \"utf8\", \n\t\t\t\t\t(err, data) => r(data)));\n\t\t\t\n\t\t\tconst output = {\n\t\t\t\tlineCount: data.split(\"\\n\").length,\n\t\t\t\tcharCount: data.length\n\t\t\t};\n\t\t\t\n\t\t\tfinalizedData[language].fileData[localPath] = output;\n\t\t\t\n\t\t\tfinalizedData.total.fileCount++;\n\t\t\tfinalizedData.total.lineCount += output.lineCount;\n\t\t\tfinalizedData.total.charCount += output.charCount;\n\n\t\t\tfinalizedData[language].fileCount++;\n\t\t\tfinalizedData[language].lineCount += output.lineCount;\n\t\t\tfinalizedData[language].charCount += output.charCount;\n\t\t}\n\t\tcatch (e) {\n\t\t\tfinalizedData.errors++;\n\t\t\t\n\t\t\tconsole.error(e);\n\t\t}\n\t}\n\t\n\tfor (const lang of options.languages) {\n\t\tif (!finalizedData[lang]) continue;\n\t\t\n\t\tfinalizedData[lang].filePercentage =\n\t\t\tfinalizedData[lang].fileCount / finalizedData.total.fileCount;\n\t\tfinalizedData[lang].linePercentage =\n\t\t\tfinalizedData[lang].lineCount / finalizedData.total.lineCount;\n\t\tfinalizedData[lang].charPercentage =\n\t\t\tfinalizedData[lang].charCount / finalizedData.total.charCount;\n\t\t\n\t\tfor (const fp in finalizedData[lang].fileData) {\n\t\t\tfinalizedData[lang].fileData[fp].linePercentage =\n\t\t\t\tfinalizedData[lang].fileData[fp].lineCount / finalizedData[lang].lineCount;\n\t\t\tfinalizedData[lang].fileData[fp].charPercentage =\n\t\t\t\tfinalizedData[lang].fileData[fp].charCount / finalizedData[lang].charCount;\n\t\t}\n\t}\n\t\n\tApp.setTallyData(finalizedData);\n\tApp.setProcessingState(false);\n\t\n\tconsole.log(finalizedData);\n}\n\nfunction TallyDataItem({ lang, data, children = null }) {\n\tconst [collapsed, setCollapsed] = React.useState(true);\n\tconst filenames = React.useMemo(() => data\n\t\t? Object.keys(data.fileData).sort((x, y) =>\n\t\t\tdata.fileData[y].charCount - data.fileData[x].charCount)\n\t\t: [], []);\n\tconst [renderedChildren, renderChildren] = React.useState(data ? filenames.slice(0, 20) : []);\n\t\n\treturn (\n\t\t<div className=\"TallyItem\" onClick={e => e.target === e.currentTarget && setCollapsed(!collapsed)}>\n\t\t\t<h2 className=\"Title\">\n\t\t\t\t<div className=\"ColorItem\"\n\t\t\t\t\t style={{ backgroundColor: languages[lang]?.color ?? \"white\" }}/>\n\n\t\t\t\t<div className=\"SubTitle\">{lang}</div>\n\t\t\t</h2>\n\n\t\t\t{ !collapsed && (\n\t\t\t\tchildren ?? (\n\t\t\t\t\t<div className=\"Contents\">\n\t\t\t\t\t\t<h1 className=\"Title\" style={{ marginTop: 0 }}>Overall Stats</h1>\n\n\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t<b>{lang} File Count</b> - <span>{formatNumberValue(data.fileCount)}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t<b>{lang} Line Count</b> - <span>{formatNumberValue(data.lineCount)}</span>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t<b>{lang} Character Count</b> - <span>{formatNumberValue(data.charCount)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h1 className=\"Title\">Per-file Data</h1>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ renderedChildren.map(fp => (\n\t\t\t\t\t\t\t<div className=\"Entry\" key={fp}>\n\t\t\t\t\t\t\t\t<div className=\"Big\">{fp}</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<p><b>Line Count</b> - <span>{formatNumberValue(data.fileData[fp].lineCount)}</span></p>\n\t\t\t\t\t\t\t\t<p><b>Char Count</b> - <span>{formatNumberValue(data.fileData[fp].charCount)}</span></p>\n\t\t\t\t\t\t\t\t<p><b>Line Count % of {lang}</b> - <span>{(data.fileData[fp].linePercentage * 100).toFixed(1)}%</span></p>\n\t\t\t\t\t\t\t\t<p><b>Char Count % of {lang}</b> - <span>{(data.fileData[fp].charPercentage * 100).toFixed(1)}%</span></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ filenames.length - renderedChildren.length > 0 && (\n\t\t\t\t\t\t\t<div className=\"Button\" style={{ marginRight: 0, marginBottom: 0 }}\n\t\t\t\t\t\t\t\t onClick={() => renderChildren([...renderedChildren, ...filenames.slice(renderedChildren.length, renderedChildren.length + 20)])}>\n\t\t\t\t\t\t\t\tShow More ({filenames.length - renderedChildren.length} remaining)\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nfunction formatNumberValue(num) {\n\treturn new Intl.NumberFormat().format(num);\n}\n\nfunction exportData(data) {\n\telectron.remote.dialog\n\t\t.showSaveDialog(null, { filters: [{ name: \"Tally Data JSON\", extensions: [\"json\"] }] })\n\t\t.then(({ filePath }) =>\n\t\t\tfilePath && fs.writeFileSync(filePath, JSON.stringify(data, null, \"\\t\"), { encoding: \"utf8\" }));\n}\n\nexport default function App() {\n\tconst [directory, setDirectoryState] = React.useState(null);\n\tconst [processing, setProcessingState] = React.useState(false);\n\tconst [tallyData, setTallyData] = React.useState(null);\n\tconst [statusText, setStatus] = React.useState(null);\n\t\n\tconst setDirectory = dir => {\n\t\tsetDirectoryState(dir);\n\t\tsetTallyData(null);\n\t\tsetStatus(null);\n\t};\n\t\n\tApp.directory = directory;\n\tApp.setProcessingState = setProcessingState;\n\tApp.setTallyData = setTallyData;\n\tApp.setStatus = setStatus;\n\t\n\tconst tallyLanguages =\n\t\ttallyData\n\t\t\t? options.languages.filter(lang => tallyData[lang])\n\t\t\t: null;\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"Main\">\n\t\t\t\t<div className=\"FilePickerContainer\" onClick={() =>\n\t\t\t\t\tselectDirectory().then(({ filePaths }) => filePaths?.length && setDirectory(filePaths[0]))}>\n\t\t\t\t\t<FontAwesomeIcon icon={faFolder} className=\"Icon\"/>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"DirectoryContainer\">\n\t\t\t\t\t\t{ directory?.length ? directory : <span>No directory selected.</span> }\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\tSelect Directory\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t{ processing && (\n\t\t\t\t\t<div className=\"Processing\">\n\t\t\t\t\t\t<h1>Scanning...</h1>\n\t\t\t\t\t\t{ statusText?.length && <h1>{statusText}</h1> }\n\t\t\t\t\t\t<InlineLoading/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t\n\t\t\t\t{ tallyData && (\n\t\t\t\t\t<div className=\"DirectoryPropertyContainer TallyDataList\">\n\t\t\t\t\t\t<TallyDataItem lang=\"Total\">\n\t\t\t\t\t\t\t<div className=\"Contents\">\n\t\t\t\t\t\t\t\t<h1 className=\"Title\" style={{ marginTop: 0 }}>Overall Stats</h1>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<b>Total File Count</b> - <span>{formatNumberValue(tallyData.total.fileCount)}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<b>Total Line Count</b> - <span>{formatNumberValue(tallyData.total.lineCount)}</span>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<b>Total Character Count</b> - <span>{formatNumberValue(tallyData.total.charCount)}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<h1 className=\"Title\">Language Percentages</h1>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<div className=\"Title\">By File Count</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"PercentageTally\">\n\t\t\t\t\t\t\t\t\t\t{ tallyLanguages\n\t\t\t\t\t\t\t\t\t\t\t.sort((x, y) => tallyData[y].filePercentage - tallyData[x].filePercentage)\n\t\t\t\t\t\t\t\t\t\t\t.map(lang => (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"Bar\" key={lang}\n\t\t\t\t\t\t\t\t\t\t\t\t style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t backgroundColor: languages[lang].color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t width: (tallyData[lang].filePercentage * 100) + \"%\"\n\t\t\t\t\t\t\t\t\t\t\t\t }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip color=\"var(--primary-bg)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{lang} - <span style={{ color: \"var(--primary-color)\" }}>{(tallyData[lang].filePercentage * 100).toFixed(1)}%</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<div className=\"Title\">By Line Count</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"PercentageTally\">\n\t\t\t\t\t\t\t\t\t\t{ tallyLanguages\n\t\t\t\t\t\t\t\t\t\t\t.sort((x, y) => tallyData[y].linePercentage - tallyData[x].linePercentage)\n\t\t\t\t\t\t\t\t\t\t\t.map(lang => (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"Bar\" key={lang}\n\t\t\t\t\t\t\t\t\t\t\t\t style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t backgroundColor: languages[lang].color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t width: (tallyData[lang].linePercentage * 100) + \"%\"\n\t\t\t\t\t\t\t\t\t\t\t\t }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip color=\"var(--primary-bg)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{lang} - <span style={{ color: \"var(--primary-color)\" }}>{(tallyData[lang].linePercentage * 100).toFixed(1)}%</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"Entry\">\n\t\t\t\t\t\t\t\t\t<div className=\"Title\">By Character Count</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"PercentageTally\">\n\t\t\t\t\t\t\t\t\t\t{ tallyLanguages\n\t\t\t\t\t\t\t\t\t\t\t.sort((x, y) => tallyData[y].charPercentage - tallyData[x].charPercentage)\n\t\t\t\t\t\t\t\t\t\t\t.map(lang => tallyData[lang] && (\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"Bar\" key={lang}\n\t\t\t\t\t\t\t\t\t\t\t\t style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t backgroundColor: languages[lang].color,\n\t\t\t\t\t\t\t\t\t\t\t\t\t width: (tallyData[lang].charPercentage * 100) + \"%\"\n\t\t\t\t\t\t\t\t\t\t\t\t }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip color=\"var(--primary-bg)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{lang} - <span style={{ color: \"var(--primary-color)\" }}>{(tallyData[lang].charPercentage * 100).toFixed(1)}%</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TallyDataItem>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ tallyLanguages.sort((x, y) => tallyData[y].charPercentage - tallyData[x].charPercentage).map(lang =>\n\t\t\t\t\t\t\t<TallyDataItem key={lang} data={tallyData[lang]} lang={lang}/>) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t\n\t\t\t\t{ directory?.length && !processing && !tallyData && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"DirectoryPropertyContainer\">\n\t\t\t\t\t\t\t<SwitchItem title=\"Include sub-directories\" defaultValue={options.includeSubDirs}\n\t\t\t\t\t\t\t\t\t\tcallback={val => (options.includeSubDirs = val)}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"DirectoryPropertyContainer\">\n\t\t\t\t\t\t\t<div className=\"BlacklistContainer\">\n\t\t\t\t\t\t\t\t<h2 className=\"Title\">Blacklist</h2>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<p className=\"Note\">\n\t\t\t\t\t\t\t\t\tFiles and directories containing keywords from your blacklist \n\t\t\t\t\t\t\t\t\twill not be included in the search.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p className=\"Note\">\n\t\t\t\t\t\t\t\t\tSeparate with new lines.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<textarea className=\"Field\" defaultValue={options.blackList} spellCheck={false}\n\t\t\t\t\t\t\t\t\t\t  onChange={e => (options.blackList = e.currentTarget.value)}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"DirectoryPropertyContainer\">\n\t\t\t\t\t\t\t<div className=\"LanguagesList\">\n\t\t\t\t\t\t\t\t<h2 className=\"Title\">Languages</h2>\n\n\t\t\t\t\t\t\t\t<p className=\"Note\">\n\t\t\t\t\t\t\t\t\tWhat languages you wish to include in the search.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div className=\"List\">\n\t\t\t\t\t\t\t\t\t{ Object.entries(languages).map(([languageName, data]) => (\n\t\t\t\t\t\t\t\t\t\t<SwitchItem title={(\n\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ColorItem\" style={{ backgroundColor: data.color }}/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"SubTitle\">{languageName}</span>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t)} defaultValue={true} key={languageName} callback={val =>\n\t\t\t\t\t\t\t\t\t\t\t!val\n\t\t\t\t\t\t\t\t\t\t\t\t? options.languages.splice(options.languages.indexOf(languageName), 1)\n\t\t\t\t\t\t\t\t\t\t\t\t: options.languages.push(languageName)}/>\n\t\t\t\t\t\t\t\t\t)) }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) }\n\n\t\t\t\t<div className=\"Buttons\">\n\t\t\t\t\t{ directory?.length && !processing && (\n\t\t\t\t\t\t<div className=\"Button\" onClick={() =>\n\t\t\t\t\t\t\t(console.log(options), setProcessingState(true), process())}>\n\t\t\t\t\t\t\t{ tallyData ? \"Re-tally\" : \"Begin Scan\" }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ tallyData && (\n\t\t\t\t\t\t<div className=\"Button\" onClick={exportData.bind(null, tallyData)}>\n\t\t\t\t\t\t\tExport Data To JSON\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<footer className=\"Footer\">\n\t\t\t\t<div><a href=\"https://fontawesome.com/license\">Icon License</a></div>\n\t\t\t\t<div className=\"Divider\"/>\n\t\t\t\t<div><a href=\"https://www.nordtheme.com\">Color Palette</a></div>\n\t\t\t\t<div className=\"Divider\"/>\n\t\t\t\t<div>Copyright © 2021-{new Date().getFullYear()} Metalloriff</div>\n\t\t\t\t<div className=\"Divider\"/>\n\t\t\t\t<div>Made by <a href=\"https://metalloriff.github.io/\">Metalloriff</a></div>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}